#![feature(proc_macro_hygiene, decl_macro)]

use std::io;
use std::path::{Path, PathBuf};

#[macro_use] extern crate rocket;
use rocket_contrib::templates::Template;
use rocket::response::NamedFile;

#[derive(Debug)]
struct AngularDir(Strin) {
	field: Type
}

#[get("/")]
fn index() -> io::Result<NamedFile> {
	NamedFile::open("../apartment-app/dist/apartment-app/index.html")
}

#[get("/<file..>")]
fn static_files(file: PathBuf) -> Option<NamedFile>{
	NamedFile::open(Path::new("../apartment-app/dist/apartment-app/").join(file)).ok()
}

fn main() {
    rocket::ignite()
    	.mount("/", routes![index, static_files])
    	.attach(Template::fairing())
    	.launch();
}
